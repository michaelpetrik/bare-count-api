version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@example.com}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --api.dashboard=true
      - --api.insecure=true
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certs:/letsencrypt
    networks:
      - web

  counter-api:
    build: .
    container_name: counter-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./storage.json:/app/storage.json
    networks:
      - web
    depends_on:
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${API_DOMAIN:-api.localhost}`)'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.routers.api-secure.rule=Host(`${API_DOMAIN:-api.localhost}`)'
      - 'traefik.http.routers.api-secure.entrypoints=websecure'
      - 'traefik.http.routers.api-secure.tls.certresolver=letsencrypt'
      - 'traefik.http.services.api.loadbalancer.server.port=3000'

volumes:
  traefik-certs:

networks:
  web:
